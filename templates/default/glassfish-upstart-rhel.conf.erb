#
# Generated by Chef
#
# glassfish - Glassfish Application Server
#
description     "Glassfish Application Server - <%= @resource.domain_name %> Domain"

start on filesystem or runlevel [2345]
stop on runlevel [!2345]

# Increase default timeout before killing (on stop) to 10 seconds
kill timeout 50
respawn limit 15 5
umask 0077


<% config_dir = "#{node['glassfish']['domains_dir']}/#{@resource.domain_name}/config" %>
pre-start script
  test -f <%= node['glassfish']['base_dir'] %>/glassfish/modules/glassfish.jar || { stop; exit 0; }
  test -d <%= config_dir %> || { stop; exit 0; }
end script

<% @resource.env_variables.sort.each do |key, value| -%>
env <% key %>=<% value %>
<% end %>

chdir <%= config_dir %>
# old version of upstart used on centos - setuid not supported
# su -c will change both the effective user id and group id to that of the glassfish user.

exec su -s /bin/sh -c 'exec "$0" "$@"' <%= node['glassfish']['user'] %> -- <%= @authbind ? "/usr/bin/authbind --deep " : "" %><%= node["java"]["java_home"] %>/bin/java <%= @args.join(' ') %>


# Uglies to wait until the broker is actually up before completion of the 'start'
post-start script
  <% @listen_ports.sort.each do |listen_port| %>
  while [ $(netstat -nl | grep -c '0.0.0.0:<%= listen_port %> ') -eq 0 ]
  do
      i=$(( $i + 1 ))
      echo -n "."
      if test $i -gt 60; then
          echo "Error"
          stop; exit 42
      fi
      sleep 1
  done
  <% end %>
end script

# Uglies to wait until the broker is actually up before completion of the 'stop'
post-stop script
  <% @listen_ports.sort.each do |listen_port| %>
  while [ $(netstat -nl | grep -c '0.0.0.0:<%= listen_port %> ') -ne 0 ]
  do
      i=$(( $i + 1 ))
      echo -n "."
      if test $i -gt 60; then
          echo "Error"
          stop; exit 42
      fi
      sleep 1
  done
  <% end %>
end script
